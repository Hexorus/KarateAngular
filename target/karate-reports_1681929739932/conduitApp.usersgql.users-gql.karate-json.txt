{"failedCount":0,"prefixedPath":"classpath:conduitApp\/usersgql\/users-gql.feature","packageQualifiedName":"conduitApp.usersgql.users-gql","loopIndex":-1,"relativePath":"conduitApp\/usersgql\/users-gql.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":798700,"millis":0.7987,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:40:53.130 karate.env system property was: null \n"},{"result":{"nanos":297400,"millis":0.2974,"status":"passed"},"step":{"endLine":23,"comments":["# note the use of text instead of def since this is NOT json"],"line":11,"prefix":"Given","docString":"{\n  user(id: 1) {\n    posts {\n      data {\n        id\n        title\n      }\n    }\n  }\n}","index":0,"text":"text query ="}},{"result":{"nanos":1478800,"millis":1.4788,"status":"passed"},"step":{"line":24,"prefix":"And","index":1,"text":"request { query: '#(query)' }"}},{"result":{"nanos":825905100,"millis":825.9051,"status":"passed"},"step":{"line":25,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:40:53.136 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 108\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"{\\n  user(id: 1) {\\n    posts {\\n      data {\\n        id\\n        title\\n      }\\n    }\\n  }\\n}\"}\n\n13:40:53.959 response time in milliseconds: 820\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 598\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:42:15 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::pq84t-1681929735501-229d68e92cf0\n{\"data\":{\"user\":{\"posts\":{\"data\":[{\"id\":\"1\",\"title\":\"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"},{\"id\":\"2\",\"title\":\"qui est esse\"},{\"id\":\"3\",\"title\":\"ea molestias quasi exercitationem repellat qui ipsa sit aut\"},{\"id\":\"4\",\"title\":\"eum et est occaecati\"},{\"id\":\"5\",\"title\":\"nesciunt quas odio\"},{\"id\":\"6\",\"title\":\"dolorem eum magni eos aperiam quia\"},{\"id\":\"7\",\"title\":\"magnam facilis autem\"},{\"id\":\"8\",\"title\":\"dolorem dolore est ipsam\"},{\"id\":\"9\",\"title\":\"nesciunt iure omnis dolorem tempora et accusantium\"},{\"id\":\"10\",\"title\":\"optio molestias id quia eum\"}]}}}}\n\n"},{"result":{"nanos":24100,"millis":0.0241,"status":"passed"},"step":{"line":26,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":3385200,"millis":3.3852,"status":"passed"},"step":{"comments":["# pretty print the response"],"line":29,"prefix":"*","index":4,"text":"print 'response:', response"},"stepLog":"13:40:53.964 [print] response: {\n  \"data\": {\n    \"user\": {\n      \"posts\": {\n        \"data\": [\n          {\n            \"id\": \"1\",\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"\n          },\n          {\n            \"id\": \"2\",\n            \"title\": \"qui est esse\"\n          },\n          {\n            \"id\": \"3\",\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\"\n          },\n          {\n            \"id\": \"4\",\n            \"title\": \"eum et est occaecati\"\n          },\n          {\n            \"id\": \"5\",\n            \"title\": \"nesciunt quas odio\"\n          },\n          {\n            \"id\": \"6\",\n            \"title\": \"dolorem eum magni eos aperiam quia\"\n          },\n          {\n            \"id\": \"7\",\n            \"title\": \"magnam facilis autem\"\n          },\n          {\n            \"id\": \"8\",\n            \"title\": \"dolorem dolore est ipsam\"\n          },\n          {\n            \"id\": \"9\",\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\"\n          },\n          {\n            \"id\": \"10\",\n            \"title\": \"optio molestias id quia eum\"\n          }\n        ]\n      }\n    }\n  }\n}\n \n"},{"result":{"nanos":1945200,"millis":1.9452,"status":"passed"},"step":{"comments":["# json-path makes it easy to focus only on the parts you are interested in","# which is especially useful for graph-ql as responses tend to be heavily nested","# '$' happens to be a JsonPath-friendly short-cut for the 'response' variable"],"line":34,"prefix":"*","index":5,"text":"match $.data.user.posts.data[0] contains { id: '1' }"}},{"result":{"nanos":1091400,"millis":1.0914,"status":"passed"},"step":{"comments":["# the '..' wildcard is useful for traversing deeply nested parts of the json"],"line":37,"prefix":"*","index":6,"text":"def posts = $..posts.data[*]"}},{"result":{"nanos":1210200,"millis":1.2102,"status":"passed"},"step":{"line":38,"prefix":"*","index":7,"text":"match posts[1] == { id: '2', title: 'qui est esse' }"}}],"line":9,"description":"","durationMillis":836.1361,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-5","name":"simple graphql request","startTime":1681929653125,"refId":"[1:9]","endTime":1681929653968,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":808300,"millis":0.8083,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:40:53.259 karate.env system property was: null \n"},{"result":{"nanos":16478000,"millis":16.478,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":3169500,"millis":3.1695,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 1 })' }"}},{"result":{"nanos":517391700,"millis":517.3917,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:40:53.286 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":1}}\n\n13:40:53.797 response time in milliseconds: 511\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 124\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:42:15 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::5tpww-1681929735494-37515b377886\n{\"data\":{\"user\":{\"id\":\"1\",\"username\":\"Bret\",\"email\":\"Sincere@april.biz\",\"address\":{\"geo\":{\"lat\":-37.3159,\"lng\":81.1496}}}}}\n\n"},{"result":{"nanos":12800,"millis":0.0128,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":3165000,"millis":3.165,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Bret\""}},{"result":{"nanos":745000,"millis":0.745,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lng: 81.1496, lat: -37.3159 } }"}}],"line":54,"description":"","durationMillis":541.7703,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-4","name":"graphql query from a file and using examples - Bret","startTime":1681929653256,"refId":"[2.1:54]","endTime":1681929653802,"exampleData":{"variables":"{ id: 1 }","username":"Bret","address":"{ geo:{ lng: 81.1496, lat: -37.3159 } }"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":1001100,"millis":1.0011,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:40:53.445 karate.env system property was: null \n"},{"result":{"nanos":2639500,"millis":2.6395,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":3882400,"millis":3.8824,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 2 })' }"}},{"result":{"nanos":593156600,"millis":593.1566,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:40:53.456 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":2}}\n\n13:40:54.046 response time in milliseconds: 589\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 130\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:42:15 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::pq84t-1681929735726-9596aeefdf7b\n{\"data\":{\"user\":{\"id\":\"2\",\"username\":\"Antonette\",\"email\":\"Shanna@melissa.tv\",\"address\":{\"geo\":{\"lat\":-43.9509,\"lng\":-34.4618}}}}}\n\n"},{"result":{"nanos":79200,"millis":0.0792,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":1436500,"millis":1.4365,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Antonette\""}},{"result":{"nanos":618300,"millis":0.6183,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lat:-43.9509, lng: -34.4618 } }"}}],"line":55,"description":"","durationMillis":602.8136,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-2","name":"graphql query from a file and using examples - Antonette","startTime":1681929653441,"refId":"[2.2:55]","endTime":1681929654050,"exampleData":{"variables":"{ id: 2 }","username":"Antonette","address":"{ geo:{ lat:-43.9509, lng: -34.4618 } }"},"exampleIndex":1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":911900,"millis":0.9119,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:40:53.602 karate.env system property was: null \n"},{"result":{"nanos":1786500,"millis":1.7865,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":1881900,"millis":1.8819,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 3 })' }"}},{"result":{"nanos":641238300,"millis":641.2383,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:40:53.614 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":3}}\n\n13:40:54.251 response time in milliseconds: 637\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 130\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:42:16 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::gkjb8-1681929735964-98709e7f624b\n{\"data\":{\"user\":{\"id\":\"3\",\"username\":\"Samantha\",\"email\":\"Nathan@yesenia.net\",\"address\":{\"geo\":{\"lat\":-68.6102,\"lng\":-47.0653}}}}}\n\n"},{"result":{"nanos":19200,"millis":0.0192,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":2904500,"millis":2.9045,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Samantha\""}},{"result":{"nanos":1253300,"millis":1.2533,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lat:-68.6102, lng: -47.0653 } }"}}],"line":56,"description":"","durationMillis":649.9956,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-1","name":"graphql query from a file and using examples - Samantha","startTime":1681929653598,"refId":"[2.3:56]","endTime":1681929654257,"exampleData":{"variables":"{ id: 3 }","username":"Samantha","address":"{ geo:{ lat:-68.6102, lng: -47.0653 } }"},"exampleIndex":2}],"callDepth":0,"name":"users","description":"","resultDate":"2023-04-19 01:40:55 PM","durationMillis":2630.7156,"passedCount":4}