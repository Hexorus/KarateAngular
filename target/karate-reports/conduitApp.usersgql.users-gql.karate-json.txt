{"failedCount":0,"prefixedPath":"classpath:conduitApp\/usersgql\/users-gql.feature","packageQualifiedName":"conduitApp.usersgql.users-gql","loopIndex":-1,"relativePath":"conduitApp\/usersgql\/users-gql.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":541300,"millis":0.5413,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:42:22.565 karate.env system property was: null \n"},{"result":{"nanos":171800,"millis":0.1718,"status":"passed"},"step":{"endLine":23,"comments":["# note the use of text instead of def since this is NOT json"],"line":11,"prefix":"Given","docString":"{\n  user(id: 1) {\n    posts {\n      data {\n        id\n        title\n      }\n    }\n  }\n}","index":0,"text":"text query ="}},{"result":{"nanos":1321200,"millis":1.3212,"status":"passed"},"step":{"line":24,"prefix":"And","index":1,"text":"request { query: '#(query)' }"}},{"result":{"nanos":642697200,"millis":642.6972,"status":"passed"},"step":{"line":25,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:42:22.570 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 108\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"{\\n  user(id: 1) {\\n    posts {\\n      data {\\n        id\\n        title\\n      }\\n    }\\n  }\\n}\"}\n\n13:42:23.210 response time in milliseconds: 639\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 598\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:43:44 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::9kwvh-1681929824774-00b08fab7693\n{\"data\":{\"user\":{\"posts\":{\"data\":[{\"id\":\"1\",\"title\":\"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"},{\"id\":\"2\",\"title\":\"qui est esse\"},{\"id\":\"3\",\"title\":\"ea molestias quasi exercitationem repellat qui ipsa sit aut\"},{\"id\":\"4\",\"title\":\"eum et est occaecati\"},{\"id\":\"5\",\"title\":\"nesciunt quas odio\"},{\"id\":\"6\",\"title\":\"dolorem eum magni eos aperiam quia\"},{\"id\":\"7\",\"title\":\"magnam facilis autem\"},{\"id\":\"8\",\"title\":\"dolorem dolore est ipsam\"},{\"id\":\"9\",\"title\":\"nesciunt iure omnis dolorem tempora et accusantium\"},{\"id\":\"10\",\"title\":\"optio molestias id quia eum\"}]}}}}\n\n"},{"result":{"nanos":20200,"millis":0.0202,"status":"passed"},"step":{"line":26,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":4935100,"millis":4.9351,"status":"passed"},"step":{"comments":["# pretty print the response"],"line":29,"prefix":"*","index":4,"text":"print 'response:', response"},"stepLog":"13:42:23.218 [print] response: {\n  \"data\": {\n    \"user\": {\n      \"posts\": {\n        \"data\": [\n          {\n            \"id\": \"1\",\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"\n          },\n          {\n            \"id\": \"2\",\n            \"title\": \"qui est esse\"\n          },\n          {\n            \"id\": \"3\",\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\"\n          },\n          {\n            \"id\": \"4\",\n            \"title\": \"eum et est occaecati\"\n          },\n          {\n            \"id\": \"5\",\n            \"title\": \"nesciunt quas odio\"\n          },\n          {\n            \"id\": \"6\",\n            \"title\": \"dolorem eum magni eos aperiam quia\"\n          },\n          {\n            \"id\": \"7\",\n            \"title\": \"magnam facilis autem\"\n          },\n          {\n            \"id\": \"8\",\n            \"title\": \"dolorem dolore est ipsam\"\n          },\n          {\n            \"id\": \"9\",\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\"\n          },\n          {\n            \"id\": \"10\",\n            \"title\": \"optio molestias id quia eum\"\n          }\n        ]\n      }\n    }\n  }\n}\n \n"},{"result":{"nanos":11024000,"millis":11.024,"status":"passed"},"step":{"comments":["# json-path makes it easy to focus only on the parts you are interested in","# which is especially useful for graph-ql as responses tend to be heavily nested","# '$' happens to be a JsonPath-friendly short-cut for the 'response' variable"],"line":34,"prefix":"*","index":5,"text":"match $.data.user.posts.data[0] contains { id: '1' }"}},{"result":{"nanos":15157800,"millis":15.1578,"status":"passed"},"step":{"comments":["# the '..' wildcard is useful for traversing deeply nested parts of the json"],"line":37,"prefix":"*","index":6,"text":"def posts = $..posts.data[*]"}},{"result":{"nanos":1300700,"millis":1.3007,"status":"passed"},"step":{"line":38,"prefix":"*","index":7,"text":"match posts[1] == { id: '2', title: 'qui est esse' }"}}],"line":9,"description":"","durationMillis":677.1693,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-5","name":"simple graphql request","startTime":1681929742563,"refId":"[1:9]","endTime":1681929743246,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":971600,"millis":0.9716,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:42:22.718 karate.env system property was: null \n"},{"result":{"nanos":11148900,"millis":11.1489,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":2812300,"millis":2.8123,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 1 })' }"}},{"result":{"nanos":443531300,"millis":443.5313,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:42:22.737 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":1}}\n\n13:42:23.177 response time in milliseconds: 440\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 124\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:43:44 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::5wnnn-1681929824911-d9f5d4fb1308\n{\"data\":{\"user\":{\"id\":\"1\",\"username\":\"Bret\",\"email\":\"Sincere@april.biz\",\"address\":{\"geo\":{\"lat\":-37.3159,\"lng\":81.1496}}}}}\n\n"},{"result":{"nanos":16800,"millis":0.0168,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":3891000,"millis":3.891,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Bret\""}},{"result":{"nanos":811000,"millis":0.811,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lng: 81.1496, lat: -37.3159 } }"}}],"line":54,"description":"","durationMillis":463.1829,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-4","name":"graphql query from a file and using examples - Bret","startTime":1681929742714,"refId":"[2.1:54]","endTime":1681929743184,"exampleData":{"variables":"{ id: 1 }","username":"Bret","address":"{ geo:{ lng: 81.1496, lat: -37.3159 } }"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":1016100,"millis":1.0161,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:42:22.869 karate.env system property was: null \n"},{"result":{"nanos":3552800,"millis":3.5528,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":2914700,"millis":2.9147,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 2 })' }"}},{"result":{"nanos":438566600,"millis":438.5666,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:42:22.881 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":2}}\n\n13:42:23.316 response time in milliseconds: 434\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 130\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:43:45 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::n77h6-1681929825049-dc45e36ff3d5\n{\"data\":{\"user\":{\"id\":\"2\",\"username\":\"Antonette\",\"email\":\"Shanna@melissa.tv\",\"address\":{\"geo\":{\"lat\":-43.9509,\"lng\":-34.4618}}}}}\n\n"},{"result":{"nanos":15700,"millis":0.0157,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":1497000,"millis":1.497,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Antonette\""}},{"result":{"nanos":983000,"millis":0.983,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lat:-43.9509, lng: -34.4618 } }"}}],"line":55,"description":"","durationMillis":448.5459,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-2","name":"graphql query from a file and using examples - Antonette","startTime":1681929742866,"refId":"[2.2:55]","endTime":1681929743320,"exampleData":{"variables":"{ id: 2 }","username":"Antonette","address":"{ geo:{ lat:-43.9509, lng: -34.4618 } }"},"exampleIndex":1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":1144700,"millis":1.1447,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"13:42:22.972 karate.env system property was: null \n"},{"result":{"nanos":2828700,"millis":2.8287,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":1964500,"millis":1.9645,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 3 })' }"}},{"result":{"nanos":556683900,"millis":556.6839,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"13:42:22.983 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":3}}\n\n13:42:23.535 response time in milliseconds: 552\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 130\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 18:43:45 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::z4ntr-1681929825272-5b282fc964a9\n{\"data\":{\"user\":{\"id\":\"3\",\"username\":\"Samantha\",\"email\":\"Nathan@yesenia.net\",\"address\":{\"geo\":{\"lat\":-68.6102,\"lng\":-47.0653}}}}}\n\n"},{"result":{"nanos":19100,"millis":0.0191,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":2476500,"millis":2.4765,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Samantha\""}},{"result":{"nanos":928200,"millis":0.9282,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lat:-68.6102, lng: -47.0653 } }"}}],"line":56,"description":"","durationMillis":566.0456,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-1","name":"graphql query from a file and using examples - Samantha","startTime":1681929742969,"refId":"[2.3:56]","endTime":1681929743542,"exampleData":{"variables":"{ id: 3 }","username":"Samantha","address":"{ geo:{ lat:-68.6102, lng: -47.0653 } }"},"exampleIndex":2}],"callDepth":0,"name":"users","description":"","resultDate":"2023-04-19 01:42:24 PM","durationMillis":2154.9437,"passedCount":4}