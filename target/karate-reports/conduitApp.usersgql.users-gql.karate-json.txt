{"failedCount":0,"prefixedPath":"classpath:conduitApp\/usersgql\/users-gql.feature","packageQualifiedName":"conduitApp.usersgql.users-gql","loopIndex":-1,"relativePath":"conduitApp\/usersgql\/users-gql.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":616800,"millis":0.6168,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"18:57:23.462 karate.env system property was: null \n"},{"result":{"nanos":201300,"millis":0.2013,"status":"passed"},"step":{"endLine":23,"comments":["# note the use of text instead of def since this is NOT json"],"line":11,"prefix":"Given","docString":"{\n  user(id: 1) {\n    posts {\n      data {\n        id\n        title\n      }\n    }\n  }\n}","index":0,"text":"text query ="}},{"result":{"nanos":2325900,"millis":2.3259,"status":"passed"},"step":{"line":24,"prefix":"And","index":1,"text":"request { query: '#(query)' }"}},{"result":{"nanos":691338900,"millis":691.3389,"status":"passed"},"step":{"line":25,"prefix":"When","index":2,"text":"method post"},"stepLog":"18:57:23.472 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 108\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"{\\n  user(id: 1) {\\n    posts {\\n      data {\\n        id\\n        title\\n      }\\n    }\\n  }\\n}\"}\n\n18:57:24.153 response time in milliseconds: 679\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 598\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 23:58:45 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::dk6p7-1681948725728-3e116d16ea1c\n{\"data\":{\"user\":{\"posts\":{\"data\":[{\"id\":\"1\",\"title\":\"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"},{\"id\":\"2\",\"title\":\"qui est esse\"},{\"id\":\"3\",\"title\":\"ea molestias quasi exercitationem repellat qui ipsa sit aut\"},{\"id\":\"4\",\"title\":\"eum et est occaecati\"},{\"id\":\"5\",\"title\":\"nesciunt quas odio\"},{\"id\":\"6\",\"title\":\"dolorem eum magni eos aperiam quia\"},{\"id\":\"7\",\"title\":\"magnam facilis autem\"},{\"id\":\"8\",\"title\":\"dolorem dolore est ipsam\"},{\"id\":\"9\",\"title\":\"nesciunt iure omnis dolorem tempora et accusantium\"},{\"id\":\"10\",\"title\":\"optio molestias id quia eum\"}]}}}}\n\n"},{"result":{"nanos":18400,"millis":0.0184,"status":"passed"},"step":{"line":26,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":2434000,"millis":2.434,"status":"passed"},"step":{"comments":["# pretty print the response"],"line":29,"prefix":"*","index":4,"text":"print 'response:', response"},"stepLog":"18:57:24.161 [print] response: {\n  \"data\": {\n    \"user\": {\n      \"posts\": {\n        \"data\": [\n          {\n            \"id\": \"1\",\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"\n          },\n          {\n            \"id\": \"2\",\n            \"title\": \"qui est esse\"\n          },\n          {\n            \"id\": \"3\",\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\"\n          },\n          {\n            \"id\": \"4\",\n            \"title\": \"eum et est occaecati\"\n          },\n          {\n            \"id\": \"5\",\n            \"title\": \"nesciunt quas odio\"\n          },\n          {\n            \"id\": \"6\",\n            \"title\": \"dolorem eum magni eos aperiam quia\"\n          },\n          {\n            \"id\": \"7\",\n            \"title\": \"magnam facilis autem\"\n          },\n          {\n            \"id\": \"8\",\n            \"title\": \"dolorem dolore est ipsam\"\n          },\n          {\n            \"id\": \"9\",\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\"\n          },\n          {\n            \"id\": \"10\",\n            \"title\": \"optio molestias id quia eum\"\n          }\n        ]\n      }\n    }\n  }\n}\n \n"},{"result":{"nanos":1356000,"millis":1.356,"status":"passed"},"step":{"comments":["# json-path makes it easy to focus only on the parts you are interested in","# which is especially useful for graph-ql as responses tend to be heavily nested","# '$' happens to be a JsonPath-friendly short-cut for the 'response' variable"],"line":34,"prefix":"*","index":5,"text":"match $.data.user.posts.data[0] contains { id: '1' }"}},{"result":{"nanos":725000,"millis":0.725,"status":"passed"},"step":{"comments":["# the '..' wildcard is useful for traversing deeply nested parts of the json"],"line":37,"prefix":"*","index":6,"text":"def posts = $..posts.data[*]"}},{"result":{"nanos":454000,"millis":0.454,"status":"passed"},"step":{"line":38,"prefix":"*","index":7,"text":"match posts[1] == { id: '2', title: 'qui est esse' }"}}],"line":9,"description":"","durationMillis":699.4703,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-5","name":"simple graphql request","startTime":1681948643459,"refId":"[1:9]","endTime":1681948644164,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":801400,"millis":0.8014,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"18:57:23.619 karate.env system property was: null \n"},{"result":{"nanos":11608100,"millis":11.6081,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":1750100,"millis":1.7501,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 1 })' }"}},{"result":{"nanos":513847400,"millis":513.8474,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"18:57:23.636 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":1}}\n\n18:57:24.148 response time in milliseconds: 512\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 124\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 23:58:45 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::vsbcm-1681948725727-c733562f942b\n{\"data\":{\"user\":{\"id\":\"1\",\"username\":\"Bret\",\"email\":\"Sincere@april.biz\",\"address\":{\"geo\":{\"lat\":-37.3159,\"lng\":81.1496}}}}}\n\n"},{"result":{"nanos":24400,"millis":0.0244,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":3397900,"millis":3.3979,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Bret\""}},{"result":{"nanos":683200,"millis":0.6832,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lng: 81.1496, lat: -37.3159 } }"}}],"line":54,"description":"","durationMillis":532.1125,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-4","name":"graphql query from a file and using examples - Bret","startTime":1681948643618,"refId":"[2.1:54]","endTime":1681948644153,"exampleData":{"variables":"{ id: 1 }","username":"Bret","address":"{ geo:{ lng: 81.1496, lat: -37.3159 } }"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":523100,"millis":0.5231,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"18:57:23.933 karate.env system property was: null \n"},{"result":{"nanos":945500,"millis":0.9455,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":1278200,"millis":1.2782,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 2 })' }"}},{"result":{"nanos":414045100,"millis":414.0451,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"18:57:23.938 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":2}}\n\n18:57:24.351 response time in milliseconds: 411\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 130\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 23:58:46 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::jpgvs-1681948725966-fc6da8ebcc4e\n{\"data\":{\"user\":{\"id\":\"2\",\"username\":\"Antonette\",\"email\":\"Shanna@melissa.tv\",\"address\":{\"geo\":{\"lat\":-43.9509,\"lng\":-34.4618}}}}}\n\n"},{"result":{"nanos":11800,"millis":0.0118,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":893100,"millis":0.8931,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Antonette\""}},{"result":{"nanos":386500,"millis":0.3865,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lat:-43.9509, lng: -34.4618 } }"}}],"line":55,"description":"","durationMillis":418.0833,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-2","name":"graphql query from a file and using examples - Antonette","startTime":1681948643921,"refId":"[2.2:55]","endTime":1681948644353,"exampleData":{"variables":"{ id: 2 }","username":"Antonette","address":"{ geo:{ lat:-43.9509, lng: -34.4618 } }"},"exampleIndex":1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":2329800,"millis":2.3298,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/graphqlzero.almansi.me\/api'"},"stepLog":"18:57:23.950 karate.env system property was: null \n"},{"result":{"nanos":1743400,"millis":1.7434,"status":"passed"},"step":{"comments":["# here the query is read from a file","# note that the 'replace' keyword (not used here) can also be very useful for dynamic query building"],"line":44,"prefix":"Given","index":0,"text":"def query = read('.\/queries\/user-by-id.graphql')"}},{"result":{"nanos":2124100,"millis":2.1241,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request { query: '#(query)', variables: '#({ id: 3 })' }"}},{"result":{"nanos":432508600,"millis":432.5086,"status":"passed"},"step":{"line":46,"prefix":"When","index":2,"text":"method post"},"stepLog":"18:57:23.960 request:\n1 > POST https:\/\/graphqlzero.almansi.me\/api\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 204\n1 > Host: graphqlzero.almansi.me\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n{\"query\":\"query ($id: ID!){\\r\\n  user(id: $id) {\\r\\n    id\\r\\n    username\\r\\n    email\\r\\n    address {\\r\\n      geo {\\r\\n        lat\\r\\n        lng\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\",\"variables\":{\"id\":3}}\n\n18:57:24.390 response time in milliseconds: 430\n1 < 200\n1 < Access-Control-Allow-Credentials: true\n1 < Access-Control-Allow-Origin: *\n1 < Cache-Control: public, max-age=0, must-revalidate\n1 < Connection: keep-alive\n1 < Content-Length: 130\n1 < Content-Type: application\/json\n1 < Date: Wed, 19 Apr 2023 23:58:46 GMT\n1 < Server: Vercel\n1 < Strict-Transport-Security: max-age=63072000\n1 < X-Vercel-Cache: MISS\n1 < X-Vercel-Id: sfo1::sfo1::rjwxr-1681948726007-dae2878b32eb\n{\"data\":{\"user\":{\"id\":\"3\",\"username\":\"Samantha\",\"email\":\"Nathan@yesenia.net\",\"address\":{\"geo\":{\"lat\":-68.6102,\"lng\":-47.0653}}}}}\n\n"},{"result":{"nanos":13500,"millis":0.0135,"status":"passed"},"step":{"line":47,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":1630800,"millis":1.6308,"status":"passed"},"step":{"line":48,"prefix":"And","index":4,"text":"match response..username contains \"Samantha\""}},{"result":{"nanos":417800,"millis":0.4178,"status":"passed"},"step":{"line":49,"prefix":"And","index":5,"text":"match response.data.user.address == { geo:{ lat:-68.6102, lng: -47.0653 } }"}}],"line":56,"description":"","durationMillis":440.768,"failed":false,"tags":["graphql_zero","graphql_examples","run"],"executorName":"pool-1-thread-1","name":"graphql query from a file and using examples - Samantha","startTime":1681948643948,"refId":"[2.3:56]","endTime":1681948644393,"exampleData":{"variables":"{ id: 3 }","username":"Samantha","address":"{ geo:{ lat:-68.6102, lng: -47.0653 } }"},"exampleIndex":2}],"callDepth":0,"name":"users","description":"","resultDate":"2023-04-19 06:57:24 PM","durationMillis":2090.4341,"passedCount":4}